I"^<h2 id="nodejs">Node.js</h2>
<ul>
  <li>Node.js is an open-source, cross-platform, JavaScript runtime environment that executes JavaScript code outside of a web browser.</li>
  <li>Node.js represents a “JavaScript everywhere” paradigm, unifying web-application development around a single programming language, rather than different languages for server- and client-side scripts.</li>
</ul>

<h2 id="multi-thread">Multi-Thread</h2>
<ul>
  <li>Traditional Web Application follows “Multi-Threaded Request-Response” model.</li>
  <li>Client sends request to the server, then server do some processing based on clients request, prepare response and send it back to the client.</li>
  <li>This model uses HTTP protocol. As HTTP is a Stateless Protocol, this Request/Response model is also Stateless Model.</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/5827617/80474890-040e7980-8983-11ea-8aba-6803dd746b79.png" alt="image" /></p>

<h2 id="single-thread-event-loop">Single-Thread Event Loop</h2>
<ul>
  <li>Node.JS follows Single Threaded with Event Loop Model and Process model mainly based on Javascript Event based model with Javascript callback mechanism.</li>
  <li>As Node.JS follows this architecture, it can handle more and more concurrent client requests very easily</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/5827617/80474912-0ec90e80-8983-11ea-9baf-090d2bf7a36c.png" alt="image" /></p>

<h2 id="node-js-advantages">Node JS Advantages</h2>
<ul>
  <li>Handling more and more concurrent client’s request is very easy.</li>
  <li>Even though our Node JS Application receives more and more Concurrent client requests, there is no need of creating more and more threads, because of Event loop.</li>
  <li>Node JS application uses less Threads so that it can utilize only less resources or memory</li>
</ul>

<h2 id="references">References</h2>
<ul>
  <li><a href="https://www.journaldev.com/7462/node-js-architecture-single-threaded-event-loop">Node JS Architecture – Single Threaded Event Loop</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Node.js">wiki-Node.js</a></li>
</ul>
:ET